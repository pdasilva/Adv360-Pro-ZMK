
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
              &kp ESC     &kp N1        &kp N2            &kp N3  &kp N4  &kp N5            &kp LEFT_BRACKET                                                                            &kp RIGHT_BRACKET  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp BACKSPACE
              &kp TAB      &kp Q         &kp W             &kp E   &kp R   &kp T                    &kp HOME                                                                                    &kp PG_UP   &kp Y   &kp U      &kp I     &kp O     &kp P       &kp BSLH
 &mt LEFT_CONTROL ESC      &kp A         &kp S             &kp D   &kp F   &kp G                     &kp END          &mo 1  &macro_kvm_1   &none   &none  &macro_kvm_2          &mo 2          &kp PG_DN   &kp H   &kp J      &kp K     &kp L  &kp SEMI        &kp SQT
            &kp LSHFT      &kp Z         &kp X             &kp C   &kp V   &kp B                       &none          &none         &none   &none   &none         &none          &none              &none   &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH     &kp RETURN
                &mo 4  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND   &mo 1                           &kp SPACE  &kp BACKSPACE    &kp RETURN                    &kp RETURN  &kp BACKSPACE          &kp SPACE           &mo 2   &kp LEFT  &kp DOWN    &kp UP      &kp RIGHT
            >;
        };

        layer_raise {
            bindings = <
 &kp TILDE        &kp EXCL          &kp AT        &kp HASH        &kp DLLR  &kp PRCNT            &kp LEFT_BRACE                                                                  &kp RIGHT_BRACE  &kp CARET   &kp AMPS       &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
 &kp TILDE        &kp EXCL          &kp AT        &kp HASH        &kp DLLR  &kp PRCNT                    &trans                                                                           &trans  &kp CARET   &kp AMPS       &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS       &kp PIPE
    &trans           &kp A           &kp S           &kp D           &kp F      &kp G                    &trans     &none      &trans   &none   &none        &trans       &mo 3           &trans      &kp H  &kp UNDER       &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE         &trans
    &trans  &mt LEFT_GUI Z  &mt LEFT_GUI X  &mt LEFT_GUI C  &mt LEFT_GUI V      &kp B                     &none     &none  &kp C_PREV   &none   &none  &kp C_VOL_UP       &none            &none      &none      &none         &kp LT                &kp GT           &kp QUESTION         &trans
     &mo 4          &trans          &trans          &trans          &trans                               &trans  &kp C_PP  &kp C_NEXT                  &kp C_VOL_DN  &kp K_MUTE           &trans                 &mo 3  &kp RIGHT_GUI         &kp RIGHT_ALT      &kp RIGHT_CONTROL         &trans
            >;
        };

        layer_lower {
            bindings = <
 &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &trans                                                                  &trans  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0  &kp BACKSPACE
 &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &trans                                                                  &trans  &kp NUMBER_6  &kp NUMBER_7   &kp NUMBER_8      &kp NUMBER_9       &kp NUMBER_0  &kp BACKSLASH
    &trans        &trans        &trans        &trans        &trans        &trans            &trans     &mo 3      &trans   &none   &none        &trans      &trans  &trans        &trans     &kp MINUS      &kp EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET         &trans
    &trans        &trans        &trans        &trans        &trans        &trans             &none     &none  &kp C_PREV   &none   &none  &kp C_VOL_UP       &none   &none        &trans        &trans         &trans            &trans             &trans         &trans
    &trans        &trans        &trans        &trans        &trans                          &trans  &kp C_PP  &kp C_NEXT                  &kp C_VOL_DN  &kp K_MUTE  &trans                      &trans  &kp RIGHT_GUI     &kp RIGHT_ALT  &kp RIGHT_CONTROL         &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5      &kp LEFT      &kp DOWN        &kp UP     &kp RIGHT         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_fn {
            bindings = <
  &kp F1  &kp F2  &kp F3    &kp F4      &kp F5  &kp F6            &mt LEFT_GUI LEFT_BRACKET                                                              &mt LEFT_GUI RIGHT_BRACKET                   &kp F7              &kp F8             &kp F9                   &kp F10  &kp F11  &kp F12
  &trans  &trans  &trans    &trans      &trans  &trans                               &trans                                                               &mt LEFT_GUI LEFT_BRACKET                   &trans              &trans             &trans                    &trans   &trans   &trans
 &kp ESC  &trans  &trans    &trans      &trans  &trans                               &trans  &trans  &trans  &trans  &trans  &kp NUMBER_1  &kp NUMBER_2          &mt LEFT_GUI GRAVE  &mt LEFT_GUI LEFT_BRACE  &mt LEFT_GUI MINUS  &mt LEFT_GUI PLUS  &mt LEFT_GUI RIGHT_BRACE   &trans   &trans
  &trans  &trans  &trans    &trans      &trans  &trans                               &trans  &trans  &trans  &trans  &trans        &trans        &trans                      &trans                   &trans              &trans             &trans                    &trans   &trans   &trans
  &trans  &trans  &trans  &kp BSPC  &kp RETURN                                       &trans  &trans  &trans                        &trans     &kp LSLCK                    &kp SLCK                                       &trans             &trans                    &trans   &trans   &trans
            >;
        };

    };
};
